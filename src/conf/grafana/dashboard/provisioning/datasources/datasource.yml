apiVersion: 1

datasources:
  - name: DS_ALERT_MANAGER
    # type: DS_ALERT_MANAGER_UID
    uid: Alertmanager
    access: proxy
    url: http://${STACK_SERVICE_HOSTNAME_ALERTMANAGER}:9093
    jsonData:
      implementation: prometheus

  - name: DS_PROMETHEUS
    uid: PBFE396EC0B189D67
    type: prometheus
    access: proxy
    url: http://${STACK_SERVICE_HOSTNAME_PROMETHEUS}:9090
    jsonData:
      manageAlerts: true
      alertmanagerUid: gdev-alertmanager
      prometheusType: Prometheus #Cortex | Mimir | Prometheus | Thanos
      prometheusVersion: 2.40.0

  - name: DS_LOKI
    id: P70B18C709CF3B9F1
    type: loki
    access: proxy
    url: http://${STACK_SERVICE_HOSTNAME_LOKI}:3100
    basicAuth: false
    isDefault: true
    version: 1
    editable: true
    jsonData:
      manageAlerts: false
      #analiser for tempo https://github.com/grafana/tempo/blob/main/integration/microservices/grafana/datasources/datasource.yml
      derivedFields:
        - name: "traceID"
          matcherRegex: "traceID=(\\w+)"
          url: "http://localhost:16686/trace/${__value.raw}"


  #ref https://grafana.com/docs/grafana/latest/datasources/tempo/
  # analise for tempo https://github.com/grafana/tempo/blob/main/integration/microservices/grafana/datasources/datasource.yml
  - name: DS_TEMPO
    id: PD867DF0F5C333746
    type: tempo
    # Access mode - proxy (server in the UI) or direct (browser in the UI).
    access: proxy
    url: http://${STACK_SERVICE_HOSTNAME_TEMPO}:3200
    jsonData:
      httpMethod: GET
      tracesToLogs:
        datasourceUid: P70B18C709CF3B9F1
        tags: ['job', 'instance', 'customer', 'environment', 'service', 'version']
        mappedTags: [{ key: 'service.name', value: 'service' }]
        mapTagNamesEnabled: false
        spanStartTimeShift: '1h'
        spanEndTimeShift: '1h'
        filterByTraceID: false
        filterBySpanID: false
      tracesToMetrics:
        datasourceUid: 'prom'
        tags: [{ key: 'service.name', value: 'service' }, { key: 'job' }]
        queries:
          - name: 'Sample query'
            query: 'sum(rate(tempo_spanmetrics_latency_bucket{$__tags}[5m]))'
      serviceMap:
        datasourceUid: PBFE396EC0B189D67
      search:
        hide: false
      nodeGraph:
        enabled: true
      lokiSearch:
        datasourceUid: P70B18C709CF3B9F1

  - name: DS_JAEGER
    id: PEC79F765EFF7D3C8
    type: jaeger
    access: proxy
    url: http://${STACK_SERVICE_HOSTNAME_JAEGER}:16686/
    basicAuth: false
    basicAuthUser: my_user
    editable: true
    isDefault: false
    jsonData:
      tracesToLogs:
        # Field with internal link pointing to a logs data source in Grafana.
        # datasourceUid value must match the datasourceUid value of the logs data source.
        datasourceUid: 'P70B18C709CF3B9F1'
        tags: ['job', 'instance', 'pod', 'namespace']
        mappedTags: [{ key: 'service.name', value: 'service' }]
        mapTagNamesEnabled: false
        spanStartTimeShift: '1h'
        spanEndTimeShift: '1h'
        filterByTraceID: false
        filterBySpanID: false
      tracesToMetrics:
        datasourceUid: 'prom'
        tags: [{ key: 'service.name', value: 'service' }, { key: 'job' }]
        queries:
          - name: 'Sample query'
            query: 'sum(rate(tempo_spanmetrics_latency_bucket{$__tags}[5m]))'
    secureJsonData:
      basicAuthPassword: m