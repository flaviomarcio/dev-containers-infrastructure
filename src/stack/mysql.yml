version: '3.9'
   
networks:
  stack-nt:
    name: ${STACK_NETWORK_DEFAULT}
    external: true
    
services:
  db:
    image: ${STACK_SERVICE_IMAGE_URL}
    hostname: "${STACK_SERVICE_HOSTNAME}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${STACK_SERVICE_STORAGE_DATA_DIR}:/var/lib/mysql
    #  - ${APPLICATION_DEPLOY_APP_DIR}/config-file.cnf:/etc/mysql/conf.d/config-file.cnf
    command:
      - --default-authentication-plugin=mysql_native_password
    environment:
      TZ: ${STACK_TZ}
      # MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_ROOT_PASSWORD: ${APPLICATION_DB_PASSWORD}
      MYSQL_DATABASE: ${APPLICATION_DB_DATABASE}
      MYSQL_USER: ${APPLICATION_DB_USER}
      MYSQL_PASSWORD: ${APPLICATION_DB_PASSWORD}
    # ports:
    #   - target: 3306
    #     #published: ${APPLICATION_DEPLOY_PORT}
    #     protocol: tcp
    #     mode: ingress
    deploy:
      mode: global
      placement:
        constraints:
          - ${APPLICATION_DEPLOY_NODE_DB}
      resources:
        limits:
          cpus: "${APPLICATION_DEPLOY_CPU}"
          memory: ${APPLICATION_DEPLOY_MEMORY}
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
      labels:
        - traefik.docker.network=${STACK_NETWORK_DEFAULT}
        - traefik.tcp.routers.${STACK_SERVICE_NAME}.rule=HostSNI(`*`)
        - traefik.tcp.routers.${STACK_SERVICE_NAME}.entryPoints=mysql
        - traefik.tcp.routers.${STACK_SERVICE_NAME}.service=${STACK_SERVICE_NAME}
        - traefik.tcp.services.${STACK_SERVICE_NAME}.loadbalancer.server.port=3306
    networks:
      - stack-nt