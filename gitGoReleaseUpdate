#!/bin/bash

export ROOT_DIR=${PWD}
export GIT_REPOSITORY_DST_DIR=${ROOT_DIR}/src
export DATA_TEMP_DIR=/tmp/dev-git-clone-${RANDOM}
export GIT_REPOSITORY_SRC=git@github.com:flaviomarcio/erp-containers-infrastructure.git
export GIT_REPOSITORY_SRC_BRANCH=
export GIT_REPOSITORY_NAME=$(echo $(basename ${GIT_REPOSITORY_SRC}) | sed 's/.git//g')
export GIT_REPOSITORY_DST=${DATA_TEMP_DIR}/${GIT_REPOSITORY_NAME}

export COLOR_OFF='\e[0m'
export COLOR_BACK='\e[0;30m'
export COLOR_BACK_B='\e[1;30m'
export COLOR_RED='\e[0;31m'
export COLOR_RED_B='\e[0;31m'
export COLOR_GREEN='\e[0;32m'
export COLOR_GREEN_B='\e[1;32m'
export COLOR_YELLOW='\e[0;33m'
export COLOR_YELLOW_B='\e[2;33m'
export COLOR_BLUE='\e[0;34m'
export COLOR_BLUE_B='\e[1;34m'
export COLOR_MAGENTA='\e[0;35m'
export COLOR_MAGENTA_B='\e[1;35m'
export COLOR_CIANO='\e[0;36m'
export COLOR_CIANO_B='\e[1;36m'
export COLOR_WHITE='\e[0;37m'
export COLOR_WHITE_B='\e[1;37m'

function echoColor()
{
  echo -e "${1}${COLOR_OFF}"
}

function gitClone()
{
  clear
  cd ${ROOT_DIR}
  rm -rf ${DATA_TEMP_DIR}
  mkdir -p ${DATA_TEMP_DIR}
  cd ${DATA_TEMP_DIR}
  if [[ ${PWD} != ${DATA_TEMP_DIR} ]]; then
    echoColor "${COLOR_MAGENTA}Invalid dir: ${COLOR_RED}${DATA_TEMP_DIR}, ${COLOR_MAGENTA}pwd: ${COLOR_RED}${PWD}"
    exit 0;
  fi
  echoColor "${COLOR_MAGENTA}Cloning: ${COLOR_YELLOW}${GIT_REPOSITORY_SRC}"
  git clone ${GIT_REPOSITORY_SRC} -q
  cd ${GIT_REPOSITORY_DST}
  echo $(./gitInit)&>/dev/null
  #rm -rf .git
  export GIT_REPOSITORY_SRC_BRANCH=$(git branch --show-current)
  if [[ ${GIT_REPOSITORY_SRC_BRANCH} != "release/"* ]]; then
    echoColor "${COLOR_MAGENTA}Invalid branch: ${COLOR_RED}${GIT_REPOSITORY_SRC_BRANCH}${COLOR_YELLOW} != ${COLOR_RED}release/*"
    exit 0;
  fi
  echoColor "${COLOR_MAGENTA}Checkout: ${COLOR_YELLOW}${GIT_REPOSITORY_SRC_BRANCH}"
  cd ${ROOT_DIR}
  git checkout -B ${GIT_REPOSITORY_SRC_BRANCH} -q

  echoColor "${COLOR_MAGENTA}Copying: ${COLOR_YELLOW}${GIT_REPOSITORY_DST}${COLOR_MAGENTA} to ${COLOR_YELLOW}${GIT_REPOSITORY_DST_DIR}" 
  rm -rf ${GIT_REPOSITORY_DST_DIR}
  echo $(cp -rf ${GIT_REPOSITORY_DST} ${GIT_REPOSITORY_DST_DIR})&>/dev/null

  echoColor "${COLOR_MAGENTA}Removing: ${COLOR_YELLOW}${DATA_TEMP_DIR}" 
  rm -rf ${DATA_TEMP_DIR}

  echoColor "${COLOR_MAGENTA}Releasing: ${COLOR_YELLOW}${GIT_REPOSITORY_SRC_BRANCH}${COLOR_MAGENTA} from ${COLOR_YELLOW}${GIT_REPOSITORY_SRC}${COLOR_MAGENTA}::${COLOR_YELLOW}${GIT_REPOSITORY_SRC_BRANCH}" 
  git commit -am "Releasing ${GIT_REPOSITORY_SRC_BRANCH} from ${GIT_REPOSITORY_SRC}::${GIT_REPOSITORY_SRC_BRANCH}" -q
  cd ${ROOT_DIR}
  echo $(u-git-release-update)&>/dev/null
  echoColor "${COLOR_GREEN}Finished" 
}



# git checkout gitGo
# source gitGo

# git submodule foreach git submodule foreach u-git-release-update;
# git submodule foreach u-git-release-update;
# u-git-release-update

gitClone